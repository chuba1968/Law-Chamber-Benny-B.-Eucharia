{"version":3,"sources":["./src/app/payment/payment-routing.module.ts","./node_modules/angular4-paystack/__ivy_ngcc__/fesm2015/angular4-paystack.js","./src/app/payment/payment.module.ts","./src/app/payment/payment.page.ts","./src/app/payment/payment.page.html","./src/app/payment/payment.page.scss"],"names":[],"mappings":"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","file":"payment-payment-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PaymentPage } from './payment.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PaymentPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PaymentPageRoutingModule {}\n","import { __awaiter } from 'tslib';\nimport { InjectionToken, Injectable, Inject, ɵɵdefineInjectable, ɵɵinject, EventEmitter, Component, Input, Output, Directive, HostListener, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nconst _c0 = [\"*\"];\nconst PUBLIC_KEY_TOKEN = new InjectionToken('paystack.publickey');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction MyWindow() { }\nif (false) {\n    /** @type {?} */\n    MyWindow.prototype.PaystackPop;\n}\nclass Angular4PaystackService {\n    /**\n     * @param {?} token\n     */\n    constructor(token) {\n        this.token = token;\n    }\n    /**\n     * @return {?}\n     */\n    loadScript() {\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        resolve => {\n            if (window.PaystackPop && typeof window.PaystackPop.setup === 'function') {\n                resolve();\n                return;\n            }\n            /** @type {?} */\n            const script = window.document.createElement('script');\n            window.document.head.appendChild(script);\n            /** @type {?} */\n            const onLoadFunc = (/**\n             * @return {?}\n             */\n            () => {\n                script.removeEventListener('load', onLoadFunc);\n                resolve();\n            });\n            script.addEventListener('load', onLoadFunc);\n            script.setAttribute('src', 'https://js.paystack.co/v1/inline.js');\n        }));\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    checkInput(obj) {\n        if (!obj.key && !this.token) {\n            return 'ANGULAR-PAYSTACK: Please insert a your public key';\n        }\n        if (!obj.email) {\n            return 'ANGULAR-PAYSTACK: Paystack email cannot be empty';\n        }\n        if (!obj.amount) {\n            return 'ANGULAR-PAYSTACK: Paystack amount cannot be empty';\n        }\n        if (!obj.ref) {\n            return 'ANGULAR-PAYSTACK: Paystack ref cannot be empty';\n        }\n        return '';\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    getPaystackOptions(obj) {\n        /** @type {?} */\n        const paystackOptions = {\n            key: obj.key || this.token,\n            email: obj.email,\n            amount: obj.amount,\n            ref: obj.ref,\n            metadata: obj.metadata || {},\n            currency: obj.currency || 'NGN',\n            plan: obj.plan || '',\n            channels: obj.channels,\n            quantity: obj.quantity || '',\n            subaccount: obj.subaccount || '',\n            transaction_charge: obj.transaction_charge || 0,\n            // tslint:disable-line\n            bearer: obj.bearer || '',\n        };\n        return paystackOptions;\n    }\n}\nAngular4PaystackService.ɵfac = function Angular4PaystackService_Factory(t) { return new (t || Angular4PaystackService)(ɵngcc0.ɵɵinject(PUBLIC_KEY_TOKEN)); };\nAngular4PaystackService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: Angular4PaystackService, factory: Angular4PaystackService.ɵfac, providedIn: 'root' });\n/** @nocollapse */\nAngular4PaystackService.ctorParameters = () => [\n    { type: String, decorators: [{ type: Inject, args: [PUBLIC_KEY_TOKEN,] }] }\n];\n/** @nocollapse */ Angular4PaystackService.ngInjectableDef = ɵɵdefineInjectable({ factory: function Angular4PaystackService_Factory() { return new Angular4PaystackService(ɵɵinject(PUBLIC_KEY_TOKEN)); }, token: Angular4PaystackService, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Angular4PaystackService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Inject,\n                args: [PUBLIC_KEY_TOKEN]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    Angular4PaystackService.prototype.token;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction MyWindow$1() { }\nif (false) {\n    /** @type {?} */\n    MyWindow$1.prototype.PaystackPop;\n}\nclass Angular4PaystackComponent {\n    /**\n     * @param {?} paystackService\n     */\n    constructor(paystackService) {\n        this.paystackService = paystackService;\n        this.paymentInit = new EventEmitter();\n        this.onClose = new EventEmitter(); // tslint:disable-line\n        // tslint:disable-line\n        this.callback = new EventEmitter();\n        // tslint:disable-line\n        this.isPaying = false;\n    }\n    /**\n     * @return {?}\n     */\n    pay() {\n        return __awaiter(this, void 0, void 0, function* () {\n            /** @type {?} */\n            let errorText = '';\n            if (this.paystackOptions && Object.keys(this.paystackOptions).length >= 2) {\n                errorText = this.valdateInput(this.paystackOptions);\n                this.generateOptions(this.paystackOptions);\n            }\n            else {\n                errorText = this.valdateInput(this);\n                this.generateOptions(this);\n            }\n            if (errorText) {\n                console.error(errorText);\n                return errorText;\n            }\n            yield this.paystackService.loadScript();\n            if (this.isPaying) {\n                return;\n            }\n            if (this.paymentInit.observers.length) {\n                this.paymentInit.emit();\n            }\n            /** @type {?} */\n            const payment = window.PaystackPop.setup(this._paystackOptions);\n            payment.openIframe();\n            this.isPaying = true;\n        });\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    valdateInput(obj) {\n        if (!this.callback.observers.length) {\n            return 'ANGULAR-PAYSTACK: Insert a callback output like so (callback)=\\'PaymentComplete($event)\\' to check payment status';\n        }\n        return this.paystackService.checkInput(obj);\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    generateOptions(obj) {\n        this._paystackOptions = this.paystackService.getPaystackOptions(obj);\n        this._paystackOptions.onClose = (/**\n         * @return {?}\n         */\n        () => {\n            if (this.onClose.observers.length) {\n                this.onClose.emit();\n            }\n        });\n        this._paystackOptions.callback = (/**\n         * @param {...?} response\n         * @return {?}\n         */\n        (...response) => {\n            this.callback.emit(...response);\n        });\n    }\n}\nAngular4PaystackComponent.ɵfac = function Angular4PaystackComponent_Factory(t) { return new (t || Angular4PaystackComponent)(ɵngcc0.ɵɵdirectiveInject(Angular4PaystackService)); };\nAngular4PaystackComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: Angular4PaystackComponent, selectors: [[\"angular4-paystack\"]], inputs: { key: \"key\", email: \"email\", amount: \"amount\", metadata: \"metadata\", ref: \"ref\", currency: \"currency\", plan: \"plan\", quantity: \"quantity\", channels: \"channels\", subaccount: \"subaccount\", transaction_charge: \"transaction_charge\", bearer: \"bearer\", class: \"class\", style: \"style\", paystackOptions: \"paystackOptions\" }, outputs: { paymentInit: \"paymentInit\", onClose: \"onClose\", callback: \"callback\" }, ngContentSelectors: _c0, decls: 2, vars: 2, consts: [[3, \"ngClass\", \"ngStyle\", \"click\"]], template: function Angular4PaystackComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"button\", 0);\n        ɵngcc0.ɵɵlistener(\"click\", function Angular4PaystackComponent_Template_button_click_0_listener() { return ctx.pay(); });\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.class)(\"ngStyle\", ctx.style);\n    } }, directives: [ɵngcc1.NgClass, ɵngcc1.NgStyle], encapsulation: 2 });\n/** @nocollapse */\nAngular4PaystackComponent.ctorParameters = () => [\n    { type: Angular4PaystackService }\n];\nAngular4PaystackComponent.propDecorators = {\n    key: [{ type: Input }],\n    email: [{ type: Input }],\n    amount: [{ type: Input }],\n    metadata: [{ type: Input }],\n    ref: [{ type: Input }],\n    currency: [{ type: Input }],\n    plan: [{ type: Input }],\n    quantity: [{ type: Input }],\n    channels: [{ type: Input }],\n    subaccount: [{ type: Input }],\n    transaction_charge: [{ type: Input }],\n    bearer: [{ type: Input }],\n    class: [{ type: Input }],\n    style: [{ type: Input }],\n    paystackOptions: [{ type: Input }],\n    paymentInit: [{ type: Output }],\n    onClose: [{ type: Output }],\n    callback: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Angular4PaystackComponent, [{\n        type: Component,\n        args: [{\n                selector: 'angular4-paystack',\n                template: `<button [ngClass]=\"class\" [ngStyle]=\"style\" (click)=\"pay()\"><ng-content></ng-content></button>`\n            }]\n    }], function () { return [{ type: Angular4PaystackService }]; }, { paymentInit: [{\n            type: Output\n        }], onClose: [{\n            type: Output\n        }], callback: [{\n            type: Output\n        }], key: [{\n            type: Input\n        }], email: [{\n            type: Input\n        }], amount: [{\n            type: Input\n        }], metadata: [{\n            type: Input\n        }], ref: [{\n            type: Input\n        }], currency: [{\n            type: Input\n        }], plan: [{\n            type: Input\n        }], quantity: [{\n            type: Input\n        }], channels: [{\n            type: Input\n        }], subaccount: [{\n            type: Input\n        }], transaction_charge: [{\n            type: Input\n        }], bearer: [{\n            type: Input\n        }], class: [{\n            type: Input\n        }], style: [{\n            type: Input\n        }], paystackOptions: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    Angular4PaystackComponent.prototype.key;\n    /** @type {?} */\n    Angular4PaystackComponent.prototype.email;\n    /** @type {?} */\n    Angular4PaystackComponent.prototype.amount;\n    /** @type {?} */\n    Angular4PaystackComponent.prototype.metadata;\n    /** @type {?} */\n    Angular4PaystackComponent.prototype.ref;\n    /** @type {?} */\n    Angular4PaystackComponent.prototype.currency;\n    /** @type {?} */\n    Angular4PaystackComponent.prototype.plan;\n    /** @type {?} */\n    Angular4PaystackComponent.prototype.quantity;\n    /** @type {?} */\n    Angular4PaystackComponent.prototype.channels;\n    /** @type {?} */\n    Angular4PaystackComponent.prototype.subaccount;\n    /** @type {?} */\n    Angular4PaystackComponent.prototype.transaction_charge;\n    /** @type {?} */\n    Angular4PaystackComponent.prototype.bearer;\n    /** @type {?} */\n    Angular4PaystackComponent.prototype.class;\n    /** @type {?} */\n    Angular4PaystackComponent.prototype.style;\n    /** @type {?} */\n    Angular4PaystackComponent.prototype.paystackOptions;\n    /** @type {?} */\n    Angular4PaystackComponent.prototype.paymentInit;\n    /** @type {?} */\n    Angular4PaystackComponent.prototype.onClose;\n    /** @type {?} */\n    Angular4PaystackComponent.prototype.callback;\n    /** @type {?} */\n    Angular4PaystackComponent.prototype._paystackOptions;\n    /**\n     * @type {?}\n     * @private\n     */\n    Angular4PaystackComponent.prototype.isPaying;\n    /**\n     * @type {?}\n     * @private\n     */\n    Angular4PaystackComponent.prototype.paystackService;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction MyWindow$2() { }\nif (false) {\n    /** @type {?} */\n    MyWindow$2.prototype.PaystackPop;\n}\nclass Angular4PaystackDirective {\n    /**\n     * @param {?} paystackService\n     */\n    constructor(paystackService) {\n        this.paystackService = paystackService;\n        this.paymentInit = new EventEmitter(); // tslint:disable-line\n        // tslint:disable-line\n        this.onClose = new EventEmitter(); // tslint:disable-line\n        // tslint:disable-line\n        this.callback = new EventEmitter();\n        // tslint:disable-line\n        this.isPaying = false;\n    }\n    /**\n     * @return {?}\n     */\n    pay() {\n        return __awaiter(this, void 0, void 0, function* () {\n            /** @type {?} */\n            let errorText = '';\n            if (this.paystackOptions && Object.keys(this.paystackOptions).length >= 2) {\n                errorText = this.valdateInput(this.paystackOptions);\n                this.generateOptions(this.paystackOptions);\n            }\n            else {\n                errorText = this.valdateInput(this);\n                this.generateOptions(this);\n            }\n            if (errorText) {\n                console.error(errorText);\n                return errorText;\n            }\n            yield this.paystackService.loadScript();\n            if (this.isPaying) {\n                return;\n            }\n            if (this.paymentInit.observers.length) {\n                this.paymentInit.emit();\n            }\n            /** @type {?} */\n            const payment = window.PaystackPop.setup(this._paystackOptions);\n            payment.openIframe();\n            this.isPaying = true;\n        });\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    valdateInput(obj) {\n        if (!this.callback.observers.length) {\n            return 'ANGULAR-PAYSTACK: Insert a callback output like so (callback)=\\'PaymentComplete($event)\\' to check payment status';\n        }\n        return this.paystackService.checkInput(obj);\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    generateOptions(obj) {\n        this._paystackOptions = this.paystackService.getPaystackOptions(obj);\n        this._paystackOptions.onClose = (/**\n         * @return {?}\n         */\n        () => {\n            if (this.onClose.observers.length) {\n                this.onClose.emit();\n            }\n        });\n        this._paystackOptions.callback = (/**\n         * @param {...?} response\n         * @return {?}\n         */\n        (...response) => {\n            this.callback.emit(...response);\n        });\n    }\n    /**\n     * @return {?}\n     */\n    buttonClick() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.pay();\n        });\n    }\n}\nAngular4PaystackDirective.ɵfac = function Angular4PaystackDirective_Factory(t) { return new (t || Angular4PaystackDirective)(ɵngcc0.ɵɵdirectiveInject(Angular4PaystackService)); };\nAngular4PaystackDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: Angular4PaystackDirective, selectors: [[\"\", \"angular4-paystack\", \"\"]], hostBindings: function Angular4PaystackDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function Angular4PaystackDirective_click_HostBindingHandler() { return ctx.buttonClick(); });\n    } }, inputs: { key: \"key\", email: \"email\", amount: \"amount\", metadata: \"metadata\", ref: \"ref\", currency: \"currency\", plan: \"plan\", quantity: \"quantity\", subaccount: \"subaccount\", channels: \"channels\", transaction_charge: \"transaction_charge\", bearer: \"bearer\", class: \"class\", style: \"style\", paystackOptions: \"paystackOptions\" }, outputs: { paymentInit: \"paymentInit\", onClose: \"onClose\", callback: \"callback\" } });\n/** @nocollapse */\nAngular4PaystackDirective.ctorParameters = () => [\n    { type: Angular4PaystackService }\n];\nAngular4PaystackDirective.propDecorators = {\n    key: [{ type: Input }],\n    email: [{ type: Input }],\n    amount: [{ type: Input }],\n    metadata: [{ type: Input }],\n    ref: [{ type: Input }],\n    currency: [{ type: Input }],\n    plan: [{ type: Input }],\n    quantity: [{ type: Input }],\n    subaccount: [{ type: Input }],\n    channels: [{ type: Input }],\n    transaction_charge: [{ type: Input }],\n    bearer: [{ type: Input }],\n    class: [{ type: Input }],\n    style: [{ type: Input }],\n    paystackOptions: [{ type: Input }],\n    paymentInit: [{ type: Output }],\n    onClose: [{ type: Output }],\n    callback: [{ type: Output }],\n    buttonClick: [{ type: HostListener, args: ['click',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Angular4PaystackDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[angular4-paystack]'\n            }]\n    }], function () { return [{ type: Angular4PaystackService }]; }, { paymentInit: [{\n            type: Output\n        }], onClose: [{\n            type: Output\n        }], callback: [{\n            type: Output\n        }], \n    /**\n     * @return {?}\n     */\n    buttonClick: [{\n            type: HostListener,\n            args: ['click']\n        }], key: [{\n            type: Input\n        }], email: [{\n            type: Input\n        }], amount: [{\n            type: Input\n        }], metadata: [{\n            type: Input\n        }], ref: [{\n            type: Input\n        }], currency: [{\n            type: Input\n        }], plan: [{\n            type: Input\n        }], quantity: [{\n            type: Input\n        }], subaccount: [{\n            type: Input\n        }], channels: [{\n            type: Input\n        }], transaction_charge: [{\n            type: Input\n        }], bearer: [{\n            type: Input\n        }], class: [{\n            type: Input\n        }], style: [{\n            type: Input\n        }], paystackOptions: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    Angular4PaystackDirective.prototype.key;\n    /** @type {?} */\n    Angular4PaystackDirective.prototype.email;\n    /** @type {?} */\n    Angular4PaystackDirective.prototype.amount;\n    /** @type {?} */\n    Angular4PaystackDirective.prototype.metadata;\n    /** @type {?} */\n    Angular4PaystackDirective.prototype.ref;\n    /** @type {?} */\n    Angular4PaystackDirective.prototype.currency;\n    /** @type {?} */\n    Angular4PaystackDirective.prototype.plan;\n    /** @type {?} */\n    Angular4PaystackDirective.prototype.quantity;\n    /** @type {?} */\n    Angular4PaystackDirective.prototype.subaccount;\n    /** @type {?} */\n    Angular4PaystackDirective.prototype.channels;\n    /** @type {?} */\n    Angular4PaystackDirective.prototype.transaction_charge;\n    /** @type {?} */\n    Angular4PaystackDirective.prototype.bearer;\n    /** @type {?} */\n    Angular4PaystackDirective.prototype.class;\n    /** @type {?} */\n    Angular4PaystackDirective.prototype.style;\n    /** @type {?} */\n    Angular4PaystackDirective.prototype.paystackOptions;\n    /** @type {?} */\n    Angular4PaystackDirective.prototype.paymentInit;\n    /** @type {?} */\n    Angular4PaystackDirective.prototype.onClose;\n    /** @type {?} */\n    Angular4PaystackDirective.prototype.callback;\n    /**\n     * @type {?}\n     * @private\n     */\n    Angular4PaystackDirective.prototype._paystackOptions;\n    /**\n     * @type {?}\n     * @private\n     */\n    Angular4PaystackDirective.prototype.isPaying;\n    /**\n     * @type {?}\n     * @private\n     */\n    Angular4PaystackDirective.prototype.paystackService;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction MyWindow$3() { }\nif (false) {\n    /** @type {?} */\n    MyWindow$3.prototype.PaystackPop;\n}\nclass Angular4PaystackEmbedComponent {\n    // tslint:disable-line\n    /**\n     * @param {?} paystackService\n     */\n    constructor(paystackService) {\n        this.paystackService = paystackService;\n        this.paymentInit = new EventEmitter();\n        this.onClose = new EventEmitter(); // tslint:disable-line\n        // tslint:disable-line\n        this.callback = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    pay() {\n        return __awaiter(this, void 0, void 0, function* () {\n            /** @type {?} */\n            let errorText = '';\n            if (this.paystackOptions && Object.keys(this.paystackOptions).length >= 2) {\n                errorText = this.valdateInput(this.paystackOptions);\n                this.generateOptions(this.paystackOptions);\n            }\n            else {\n                errorText = this.valdateInput(this);\n                this.generateOptions(this);\n            }\n            if (errorText) {\n                console.error(errorText);\n                return errorText;\n            }\n            yield this.paystackService.loadScript();\n            if (this.paymentInit.observers.length) {\n                this.paymentInit.emit();\n            }\n            /** @type {?} */\n            const payment = window.PaystackPop.setup(this._paystackOptions);\n            payment.openIframe();\n        });\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    valdateInput(obj) {\n        if (!this.callback.observers.length) {\n            return 'ANGULAR-PAYSTACK: Insert a callback output like so (callback)=\\'PaymentComplete($event)\\' to check payment status';\n        }\n        return this.paystackService.checkInput(obj);\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    generateOptions(obj) {\n        this._paystackOptions = this.paystackService.getPaystackOptions(obj);\n        this._paystackOptions.onClose = (/**\n         * @return {?}\n         */\n        () => {\n            if (this.onClose.observers.length) {\n                this.onClose.emit();\n            }\n        });\n        this._paystackOptions.callback = (/**\n         * @param {...?} response\n         * @return {?}\n         */\n        (...response) => {\n            this.callback.emit(...response);\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        return __awaiter(this, void 0, void 0, function* () {\n            console.error('ANGULAR-PAYSTACK: The paystack embed option is deprecated. Please use the paystack component or directive');\n            this.pay();\n        });\n    }\n}\nAngular4PaystackEmbedComponent.ɵfac = function Angular4PaystackEmbedComponent_Factory(t) { return new (t || Angular4PaystackEmbedComponent)(ɵngcc0.ɵɵdirectiveInject(Angular4PaystackService)); };\nAngular4PaystackEmbedComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: Angular4PaystackEmbedComponent, selectors: [[\"angular4-paystack-embed\"]], inputs: { key: \"key\", email: \"email\", amount: \"amount\", metadata: \"metadata\", channels: \"channels\", ref: \"ref\", currency: \"currency\", plan: \"plan\", quantity: \"quantity\", subaccount: \"subaccount\", transaction_charge: \"transaction_charge\", bearer: \"bearer\", paystackOptions: \"paystackOptions\" }, outputs: { paymentInit: \"paymentInit\", onClose: \"onClose\", callback: \"callback\" }, decls: 1, vars: 0, consts: [[\"id\", \"paystackEmbedContainer\"]], template: function Angular4PaystackEmbedComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", 0);\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nAngular4PaystackEmbedComponent.ctorParameters = () => [\n    { type: Angular4PaystackService }\n];\nAngular4PaystackEmbedComponent.propDecorators = {\n    key: [{ type: Input }],\n    email: [{ type: Input }],\n    amount: [{ type: Input }],\n    metadata: [{ type: Input }],\n    channels: [{ type: Input }],\n    ref: [{ type: Input }],\n    currency: [{ type: Input }],\n    plan: [{ type: Input }],\n    quantity: [{ type: Input }],\n    subaccount: [{ type: Input }],\n    transaction_charge: [{ type: Input }],\n    bearer: [{ type: Input }],\n    paystackOptions: [{ type: Input }],\n    paymentInit: [{ type: Output }],\n    onClose: [{ type: Output }],\n    callback: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Angular4PaystackEmbedComponent, [{\n        type: Component,\n        args: [{\n                selector: 'angular4-paystack-embed',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                template: `<div id=\"paystackEmbedContainer\"></div>`\n            }]\n    }], function () { return [{ type: Angular4PaystackService }]; }, { paymentInit: [{\n            type: Output\n        }], onClose: [{\n            type: Output\n        }], callback: [{\n            type: Output\n        }], key: [{\n            type: Input\n        }], email: [{\n            type: Input\n        }], amount: [{\n            type: Input\n        }], metadata: [{\n            type: Input\n        }], channels: [{\n            type: Input\n        }], ref: [{\n            type: Input\n        }], currency: [{\n            type: Input\n        }], plan: [{\n            type: Input\n        }], quantity: [{\n            type: Input\n        }], subaccount: [{\n            type: Input\n        }], transaction_charge: [{\n            type: Input\n        }], bearer: [{\n            type: Input\n        }], paystackOptions: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    Angular4PaystackEmbedComponent.prototype.key;\n    /** @type {?} */\n    Angular4PaystackEmbedComponent.prototype.email;\n    /** @type {?} */\n    Angular4PaystackEmbedComponent.prototype.amount;\n    /** @type {?} */\n    Angular4PaystackEmbedComponent.prototype.metadata;\n    /** @type {?} */\n    Angular4PaystackEmbedComponent.prototype.channels;\n    /** @type {?} */\n    Angular4PaystackEmbedComponent.prototype.ref;\n    /** @type {?} */\n    Angular4PaystackEmbedComponent.prototype.currency;\n    /** @type {?} */\n    Angular4PaystackEmbedComponent.prototype.plan;\n    /** @type {?} */\n    Angular4PaystackEmbedComponent.prototype.quantity;\n    /** @type {?} */\n    Angular4PaystackEmbedComponent.prototype.subaccount;\n    /** @type {?} */\n    Angular4PaystackEmbedComponent.prototype.transaction_charge;\n    /** @type {?} */\n    Angular4PaystackEmbedComponent.prototype.bearer;\n    /** @type {?} */\n    Angular4PaystackEmbedComponent.prototype.paystackOptions;\n    /** @type {?} */\n    Angular4PaystackEmbedComponent.prototype.paymentInit;\n    /** @type {?} */\n    Angular4PaystackEmbedComponent.prototype.onClose;\n    /** @type {?} */\n    Angular4PaystackEmbedComponent.prototype.callback;\n    /** @type {?} */\n    Angular4PaystackEmbedComponent.prototype._paystackOptions;\n    /**\n     * @type {?}\n     * @private\n     */\n    Angular4PaystackEmbedComponent.prototype.paystackService;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass Angular4PaystackModule {\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    static forRoot(token) {\n        return {\n            ngModule: Angular4PaystackModule,\n            providers: [\n                Angular4PaystackService,\n                { provide: PUBLIC_KEY_TOKEN, useValue: token }\n            ]\n        };\n    }\n}\nAngular4PaystackModule.ɵfac = function Angular4PaystackModule_Factory(t) { return new (t || Angular4PaystackModule)(); };\nAngular4PaystackModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: Angular4PaystackModule });\nAngular4PaystackModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [], imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(Angular4PaystackModule, { declarations: function () { return [Angular4PaystackComponent, Angular4PaystackDirective, Angular4PaystackEmbedComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [Angular4PaystackComponent, Angular4PaystackDirective, Angular4PaystackEmbedComponent]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Angular4PaystackModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                exports: [Angular4PaystackComponent, Angular4PaystackDirective, Angular4PaystackEmbedComponent],\n                declarations: [Angular4PaystackComponent, Angular4PaystackDirective, Angular4PaystackEmbedComponent],\n                providers: []\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { Angular4PaystackComponent, Angular4PaystackDirective, Angular4PaystackEmbedComponent, Angular4PaystackModule, Angular4PaystackService as ɵa, PUBLIC_KEY_TOKEN as ɵb };\n\n//# sourceMappingURL=angular4-paystack.js.map","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PaymentPageRoutingModule } from './payment-routing.module';\n\nimport { PaymentPage } from './payment.page';\nimport { Angular4PaystackModule } from 'angular4-paystack';\n\n@NgModule({\n  imports: [\n    Angular4PaystackModule.forRoot('pk_test_b3c5a2b5d3eb1a8a9179d4dfacb409aa31c4379b'),\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PaymentPageRoutingModule\n  ],\n  declarations: [PaymentPage]\n})\nexport class PaymentPageModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-payment',\n  templateUrl: './payment.page.html',\n  styleUrls: ['./payment.page.scss'],\n})\nexport class PaymentPage implements OnInit {\n  title = '';\n  reference = '';\n\n\n  constructor() {}\n\n  paymentInit() {\n    console.log('Payment initialized');\n  }\n\n  paymentDone(ref: any) {\n    this.title = 'Payment successfull';\n    console.log(this.title, ref);\n  }\n\n  paymentCancel() {\n    console.log('payment failed');\n  }\n\n  ngOnInit() {\n    this.reference = `ref-${Math.ceil(Math.random() * 10e13)}`;\n  }\n\n}\n","export default \"\\n<ion-header>\\n  <ion-toolbar> <ion-buttons slot=\\\"start\\\">\\n    <ion-back-button defaultHref=\\\"/folder\\\"></ion-back-button>\\n  </ion-buttons>\\n\\n  <ion-buttons slot=\\\"end\\\"  >\\n    <angular4-paystack\\n    [email]=\\\"'mailexample@mail.com'\\\"\\n    [amount]=\\\"50000\\\"\\n    [ref]=\\\"reference\\\"\\n    [channels]=\\\"['bank']\\\"\\n    (onClose)=\\\"paymentCancel()\\\"\\n    (callback)=\\\"paymentDone($event)\\\"\\n  >\\n  <ion-icon slot=\\\"start\\\" name=\\\"cart-outline\\\"></ion-icon>\\n\\n\\n  </angular4-paystack>\\n\\n\\n\\n  </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n\\n<br>\\n\\n\\n\\n\\n</ion-content>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwYXltZW50LnBhZ2Uuc2NzcyJ9 */\";"],"sourceRoot":"webpack:///"}